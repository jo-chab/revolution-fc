<div class="dashboard-main">    <div class="dashboard-title">        <h4>Gestion des programmes</h4>    </div>    <div class="dashboard-content">        <div class="d-form-cta split-full">            <a class="btn-primary small cta-add icon i-more" href="index.php?p=50">Ajouter un programme</a>            <div class="btn-primary small btn-edit icon i-edit" id="edit-order"><span>Modifier l'ordre</span></div>        </div>                <div class="w-toolbar">            <div class="w-filter">                <h3 class="toolbar-title">Filter les programmes</h3>                <div class="filter-label icon" id="filter-winter">Programme hiver</div>                <div class="filter-label icon" id="filter-summer">Programme été</div>            </div>            <div class="w-legend">                <h4 class="toolbar-title">Legend</h4>                <div class="legend-title icon i-winter">Programme hiver</div>                <div class="legend-title icon i-summer">Programme été</div>                <div class="legend-title icon i-summer i-winter">Programme annuel</div>            </div>        </div>                        <ul class="dashboard-list">            <?php                $stmt = $db->prepare("SELECT * FROM PROGRAMS ORDER BY p_order ASC, id_program ASC");                $stmt->execute();                $results = $stmt->fetchAll(PDO::FETCH_ASSOC);                                foreach ($results as $result) {                    $title = nl2br(stripslashes($result['program_name']));                    $program = $result['id_program'];                    $actif = $result['actif'];                    $isWinter = $result['p_winter'] == 1 ? '1' : '0';                    $isSummer = $result['p_summer'] == 1 ? '1' : '0';                                        if ($isWinter == 1) {                        $classWinter = "i-winter";                    } else {                        $classWinter = "";                    }                    if ($isSummer == 1) {                        $classSummer = "i-summer";                    } else {                        $classSummer = "";                    }                                        if ($actif == 1) {                        $texte_bouton = "Désactiver";                        $btnClass = "btn-disable";                    } else {                        $texte_bouton = "Activer";                        $btnClass = "btn-activate";                    }                                        echo "<li class='dashboard-list-elements' data-program-id='$program' data-p-winter='$isWinter' data-p-summer='$isSummer'>                        <div class='element-title icon $classWinter $classSummer'>$title</div>                        <div class='list-cta'>                                <form action='action_program_disable' method='post'>                                    <input type='hidden' name='element' value='$program'>                                    <div class='btn-primary $btnClass small icon mobile-icon-only'><span>$texte_bouton</span></div>                                </form>                            <form action='index.php?p=52' method='post'>                                <input type='hidden' name='element' value='$program'>                                <div class='btn-primary small btn-update icon mobile-icon-only'><span>Modifier</span></div>                            </form>                        </div>                    </li>";                }            ?>        </ul>                </div></div><script>    $(document).ready(function () {        // Initialize a variable to store the updated program order        var programOrder = [];        // Function to toggle is-draggable class for dashboard-list-elements        function toggleDraggableClass(active) {            const elements = $('.dashboard-list-elements');            elements.each(function() {                $(this).toggleClass('is-draggable', active);            });            // If active, initialize the sortable behavior            if (active) {                $('.dashboard-list').sortable({                    items: '.dashboard-list-elements', // Specify the draggable items                    handle: '.element-title', // Specify the handle for dragging                    containment: '.dashboard-list', // Limit dragging within the dashboard list                    update: function(event, ui) {                        // Update the program order when dragging stops                        updateProgramOrder();                    }                });            } else {                // If not active, destroy the sortable behavior                $('.dashboard-list').sortable('destroy');            }        }        // Function to update the program order array based on the current positions        function updateProgramOrder() {            programOrder = [];            $('.dashboard-list-elements').each(function() {                programOrder.push($(this).data('program-id'));            });        }        // Event listener for editing order        $('#edit-order').on('click', function () {            // Toggle 'is-active' class on the edit-order button            $(this).toggleClass('is-active');            const isActive = $(this).hasClass('is-active');            toggleDraggableClass(isActive);            // Change the text inside the <span> based on the active state            const spanText = isActive ? 'Sauvegarder' : 'Modifier l\'ordre';            $(this).find('span').text(spanText);            // If not active, save the order            if (!isActive) {                // Send the updated program order to the server using AJAX                $.ajax({                    url: 'action_program_placement.php',                    method: 'POST',                    data: {                        programOrder: JSON.stringify(programOrder)                    },                    success: function (response) {                        alert('L\'ordre des programmes a été mis à jour correctement');                    },                    error: function (error) {                        alert('Il y a eu une erreur lors de la mise a jour');                    }                });            }        });    });</script><script>    $(document).ready(function () {        const filterLabels = document.querySelectorAll('.filter-label');        filterLabels.forEach(label => {            label.addEventListener('click', function () {                const isActive = this.classList.contains('is-active');                // Remove 'is-active' class from all filter labels                filterLabels.forEach(label => {                    label.classList.remove('is-active');                });                // Toggle 'is-active' class on the clicked label                if (!isActive) {                    this.classList.add('is-active');                }                // Get the filter type ('winter' or 'summer')                const filterType = this.id.split('-')[1];                // Show/hide records based on the filter clicked                const dashboardList = document.querySelector('.dashboard-list');                const elements = dashboardList.querySelectorAll('.dashboard-list-elements');                elements.forEach(element => {                    const isWinter = element.dataset.pWinter === '1';                    const isSummer = element.dataset.pSummer === '1';                    if ((filterType === 'winter' && isWinter) || (filterType === 'summer' && isSummer) || (!document.querySelector('.is-active'))) {                        element.style.display = 'grid';                    } else {                        element.style.display = 'none';                    }                });            });        });    });</script>